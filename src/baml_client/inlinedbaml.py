# ----------------------------------------------------------------------------
#
#  Welcome to Baml! To use this generated code, please run the following:
#
#  $ pip install baml
#
# ----------------------------------------------------------------------------

# This file was generated by BAML: please do not edit it. Instead, edit the
# BAML files and re-generate this code using: baml-cli generate
# baml-cli is available with the baml package.

_file_map = {

    "clients.baml": "client<llm> Gemma3n {\n  // See https://docs.boundaryml.com/docs/snippets/clients/providers/ollama\n  // to learn more about how to configure this client\n  //\n  // Note that you should run ollama using `OLLAMA_ORIGINS='*' ollama serve`\n  // and you'll also need to `ollama pull gemma2` to use this client\n  provider ollama\n  options {\n    base_url \"http://localhost:11434/v1\"\n    model \"gemma3n:e2b\"\n  }\n}\n\n",
    "extract_command.baml": "class Command{\n    command string\n}\n\n\n\n\nfunction GenerateCommand(terminal_history: string, user_input: string) -> Command{\n  // see ollama-clients.baml\n  client Gemma3n\n  // client Mistral\n  // client Gemma2\n  // client Phi3\n\n  // The prompt uses Jinja syntax. Change the models or this text and watch the prompt preview change!\n  prompt #\"\n    Examine any provided terminal history and the user's request, then output a shell command according to the following schema. You can include a comment to explain the command if absolutely necessary.\n\n    Terminal History:\n    ---\n    {{ terminal_history }}\n    ---\n\n    User Input:\n    ---\n    {{ user_input }}\n    ---\n\n    {# special macro to print the output instructions. #}\n    {{ ctx.output_format }}\n\n    JSON:\n  \"#\n}\n\ntest OllamaTest1 {\n  functions [GenerateCommand]\n  args {\n    terminal_history #\"\nScript started on 2025-07-07 16:43:07+03:00 [TERM=\"xterm-256color\" TTY=\"/dev/pts/11\" COLUMNS=\"112\" LINES=\"11\"]\nkalish@pop-os:~/Documents/projects/terminal_assistant$ git push\nTo https://github.com/Kaleab-Ayenew/vity\n ! [rejected]        main -> main (non-fast-forward)\nerror: failed to push some refs to 'https://github.com/Kaleab-Ayenew/vity'\nhint: Updates were rejected because the tip of your current branch is behind\nhint: its remote counterpart. Integrate the remote changes (e.g.\nhint: 'git pull ...') before pushing again.\nhint: See the 'Note about fast-forwards' in 'git push --help' for details.\nkalish@pop-os:~/Documents/projects/terminal_assistant$ git pull\nhint: You have divergent branches and need to specify how to reconcile them.\nhint: You can do so by running one of the following commands sometime before\nhint: your next pull:\nhint: \nhint:   git config pull.rebase false  # merge (the default strategy)\nhint:   git config pull.rebase true   # rebase\nhint:   git config pull.ff only       # fast-forward only\nhint: \nhint: You can replace \"git config\" with \"git config --global\" to set a default\nhint: preference for all repositories. You can also pass --rebase, --no-rebase,\nhint: or --ff-only on the command line to override the configured default per\nhint: invocation.\nfatal: Need to specify how to reconcile divergent branches.\nkalish@pop-os:~/Documents/projects/terminal_assistant$ vity chat what does this mean\n🤖 Vity is thinking...\nThe messages you see when you try to `git push` and then `git pull` indicate that your local branch and the remote branch have diverged. Here's a breakdown:\n\n1. **git push rejected (non-fast-forward)**:\n   - This means your local branch is behind the remote branch.\n   - Someone else (or you from another machine) has pushed changes to the remote branch that you don't have locally.\n   - Git prevents you from pushing because it would overwrite those changes.\n\n2. **git pull hint about divergent branches**:\n   - When you try to pull, Git notices that your local branch and the remote branch have diverged (both have unique commits).\n   - Git needs to know how to reconcile these differences.\n   - It asks you to specify a strategy for merging the changes:\n     - `git config pull.rebase false` to merge (default)\n     - `git config pull.rebase true` to rebase\n     - `git config pull.ff only` to only allow fast-forward merges\n\n3. **What you should do**:\n   - Decide how you want to integrate the remote changes:\n     - If you want to merge the remote changes into your local branch, run:\n       ```\n       git pull --no-rebase\n       ```\n     - If you want to rebase your changes on top of the remote branch, run:\n       ```\n       git pull --rebase\n       ```\n   - Alternatively, set a default behavior globally, for example:\n     ```\n     git config --global pull.rebase false\n     ```\n     or\n     ```\n     git config --global pull.rebase true\n     ```\n   - After successfully pulling and resolving any conflicts, you can push your changes again.\n\nIn summary, Git is telling you that your local and remote branches have different commits, and you need to specify how to combine them before pushing.\nkalish@pop-os:~/Documents/projects/terminal_assistant$ vity status\n🔴 Recording active:\n  📝 Terminal log: /home/kalish/.local/share/vity/logs/20250707-164307-229354.log\n  💬 Chat history: /home/kalish/.local/share/vity/chat/20250707-164307-229354.json\nkalish@pop-os:~/Documents/projects/terminal_assistant$ git pull --rebase\nSuccessfully rebased and updated refs/heads/main.\nkalish@pop-os:~/Documents/projects/terminal_assistant$ git push\nEnumerating objects: 11, done.\nCounting objects: 100% (11/11), done.\nDelta compression using up to 12 threads\nCompressing objects: 100% (5/5), done.\nWriting objects: 100% (6/6), 1.01 KiB | 1.01 MiB/s, done.\nTotal 6 (delta 4), reused 0 (delta 0), pack-reused 0\nremote: Resolving deltas: 100% (4/4), completed with 4 local objects.\nTo https://github.com/Kaleab-Ayenew/vity\n   8911aa0..53fe21f  main -> main\nkalish@pop-os:~/Documents/projects/terminal_assistant$ git tag\nv0.1.0\nv0.1.1\nv0.1.2\nv0.1.3\nv0.1.5\nv0.1.6\nv0.1.8\nkalish@pop-os:~/Documents/projects/terminal_assistant$ source .venv/bin/activate\n    \"#\n    user_input #\"\n    list all services running on port 80\n    \"#\n  }\n}",
    "generator.baml": "generator target {\n    output_type \"python/pydantic\"\n\n    // Where the generated code will be saved (relative to baml_src/)\n    output_dir \"../\"\n\n    // What interface you prefer to use for the generated code (sync/async)\n    // Both are generated regardless of the choice, just modifies what is exported\n    // at the top level\n    default_client_mode \"sync\"\n\n    // Version of runtime to generate code for (should match installed baml-py version)\n    version \"0.76.2\"\n}\n",
}

def get_baml_files():
    return _file_map